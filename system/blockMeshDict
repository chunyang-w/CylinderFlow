/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  11
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

small_r 0.05;

length 2;
halfl #calc "0.5*$length";

angle 45;
small_r_sin45 #calc "$small_r*sin(degToRad($angle))";

thick 0.005;

n_cell_big 30;
grading 0.05;

vertices
(   
    // front side
    (#neg $halfl #neg $halfl 0)
    ($halfl #neg $halfl 0)

    (#neg $small_r_sin45 #neg $small_r_sin45 0)
    ($small_r_sin45 #neg $small_r_sin45 0)

    (#neg $small_r_sin45 $small_r_sin45 0)
    ($small_r_sin45 $small_r_sin45 0)

    (#neg $halfl $halfl 0)
    ($halfl $halfl 0)

    // back side
    (#neg $halfl #neg $halfl $thick)
    ($halfl #neg $halfl $thick)

    (#neg $small_r_sin45 #neg $small_r_sin45 $thick)
    ($small_r_sin45 #neg $small_r_sin45 $thick)

    (#neg $small_r_sin45 $small_r_sin45 $thick)
    ($small_r_sin45 $small_r_sin45 $thick)

    (#neg $halfl $halfl $thick)
    ($halfl $halfl $thick)
);

blocks
(
    hex (0 1 3 2 8 9 11 10) ($n_cell_big $n_cell_big 1) simpleGrading (1 $grading 1)
    hex (6 0 2 4 14 8 10 12) ($n_cell_big $n_cell_big 1) simpleGrading (1 $grading 1)
    hex (1 7 5 3 9 15 13 11) ($n_cell_big $n_cell_big 1) simpleGrading (1 $grading 1)
    hex (7 6 4 5 15 14 12 13) ($n_cell_big $n_cell_big 1) simpleGrading (1 $grading 1)
);

edges
(
    arc 2 3 90 (0 0 1)
    arc 3 5 90 (0 0 1)
    arc 5 4 90 (0 0 1)
    arc 4 2 90 (0 0 1)

    arc 12 10 90 (0 0 1)
    arc 10 11 90 (0 0 1)
    arc 11 13 90 (0 0 1)
    arc 13 12 90 (0 0 1)
);

boundary
(
    inlet
    {
        type patch;
        faces
        (
            (0 8 14 6)
        );
    }

    outlet
    {
        type patch;
        faces
        (
            (1 9 15 7)
        );
    }

    walls
    {
        type wall;
        faces
        (
            // upper wall
            (6 14 15 7)
            // lower wall
            (1 9 8 0)
        );
    }

    cylinder
    {
        type wall;
        faces
        (
            // cylinder wall
            (2 10 12 4)
            (3 11 10 2)
            (5 13 11 3)
            (4 12 13 5)
        );     
    }

    frontAndBack
    {
        type empty;
        faces
        (
            // front side
            (0 1 3 2)
            (1 7 5 3)
            (7 6 4 5)
            (6 0 2 4)
            // back side
            (8 9 11 10)
            (9 15 13 11)
            (15 14 12 13)
            (14 8 10 12)
        );
    }
);


// ************************************************************************* //
